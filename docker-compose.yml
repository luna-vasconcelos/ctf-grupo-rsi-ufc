version: "3.9"

networks:
  public:   { driver: bridge }
  internal: { driver: bridge, internal: true }

volumes:
  tcpchat_shared:

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - env.file
    environment:
      CHAT_HOST: tcpchat
      CHAT_PORT: "1337"          # só é usado se conectando por nc tcpchat
      PORT_FILE: /run/tcpchat/port
      DESIRED_FILE: /run/tcpchat/desired
    depends_on:
      tcpchat:
        condition: service_healthy
    networks: ["public","internal"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8080)); s.close()"]
      interval: 10s
      timeout: 3s
      retries: 10
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    tmpfs:
      - /tmp
    volumes:
      - tcpchat_shared:/run/tcpchat
      
  tcpcore:
    build: ./tcpchat
    environment:
      KEY_HEX: "deadbeefcafebabe0011223344556677"
    networks: ["internal"]

  tcpchat:
    build:
      context: ./tcpchat-proxy
    depends_on:
      - tcpcore
    networks: ["internal"]
    volumes:
      - tcpchat_shared:/run/tcpchat
    environment:
      TARGET_HOST: tcpcore
      TARGET_PORT: "1337"
      ROTATE_SECS: "20"
    healthcheck:
      test: ["CMD-SHELL", "test -s /run/tcpchat/port && pidof socat >/dev/null"]
      interval: 3s
      timeout: 2s
      retries: 20
      start_period: 2s

  rev-ssh:
    build: ./rev
    ports: ["2222:22"]
    networks: ["public"]
